{"version":3,"sources":["img/BgVideo2.mp4","Error.js","BgVideo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Error","props","states","errorMsg","badDate","emptyInput","noData","noRover","searchText","spaceInfo","closeWindow","className","onClick","BgVideo","autoPlay","loop","muted","style","position","width","height","objectFit","zIndex","src","Video","type","App","loadingStatus","loadOn","setState","state","gettingResults","what","result","resultsReady","handingError","typeOfError","errorText","errorPopUp","findPhotoDay","e","preventDefault","axios","url","method","params","api_key","date","then","res","photoOfTheDay","data","catch","error","response","msg","findRoverPhotos","a","roverName","manifestData","photo_manifest","er","console","log","sol","Math","floor","random","max_sol","roverPhotos","photos","errors","findSpaceInfo","q","collection","items","length","reason","userSelection","target","name","value","closeError","Nav","action","htmlFor","onChange","id","placeholder","dayPhoto","to","aria-hidden","Footer","href","aria-label","title","copyright","explanation","hasOwnProperty","alt","RoverPhotos","earthDate","earth_date","rover","landingDate","landing_date","launchDate","launch_date","roverStatus","status","max_date","total_photos","map","obj","key","img_src","SpaceInfo","slice","nasa_id","links","description","basename","process","exact","path","component","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8024bb64.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BgVideo2.88bfffbc.mp4\";","import React from 'react';\r\nimport \"./styles/app.scss\";\r\n\r\nconst Error = ( props ) => {\r\n    const {states:{errorMsg:{badDate, emptyInput, noData, noRover}, searchText, spaceInfo},  closeWindow } = props;\r\n\r\n    return(\r\n        <div className=\"popupBack\">\r\n            <div className=\"popup\">\r\n                {/* showing the right type of error */}\r\n\r\n                {/* ERROR IF THERE'S A DATE SELECTED beyond the acceptable date from API; badDate - error msg from API*/}\r\n                {\r\n                (badDate) ? <p>{badDate}</p> : null\r\n                }\r\n\r\n                {/* ERROR IF THERE'S NO ROVER SELECTED; noRover - error msg from API;\r\n                this is only applicable if we have input text instead of input select*/}\r\n                {\r\n                (noRover) ? <p>{noRover}</p> : null\r\n                }\r\n\r\n                {/* ERROR IF THERE'S search input; emptyInput - error msg from API*/}\r\n                {\r\n                (emptyInput && !searchText) ? <p>{emptyInput}</p> : null\r\n                }\r\n                \r\n                {/* ERROR IF THERE'S NO RESULTS BASED on the user search input; spaceInfo - array of results*/}\r\n                {\r\n                (spaceInfo && searchText) ? <p>{noData}</p> : null\r\n                }\r\n\r\n                <button onClick={closeWindow} >CLOSE</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Error;","import React from 'react';\r\nimport \"./styles/app.scss\";\r\nimport Video from \"./img/BgVideo2.mp4\"\r\n\r\nconst BgVideo = () => {\r\n    return(\r\n            <video autoPlay loop muted\r\n                style={{\r\n                    position: \"fixed\",\r\n                    width: \"100%\",\r\n                    height: \"100vh\",\r\n                    objectFit: \"cover\",\r\n                    zIndex: \"-10\",\r\n                }}\r\n            >\r\n                <source src={Video} type=\"video/mp4\"/>\r\n            </video>\r\n    );\r\n};\r\n\r\nexport default BgVideo;","import React, { Component } from 'react'\nimport \"./styles/app.scss\";\nimport Error from './Error';\nimport BgVideo from './BgVideo';\nimport { BrowserRouter as Router, Route, NavLink } from 'react-router-dom';\nimport axios from 'axios';\n\nclass App extends Component {\n    constructor() {\n      super();\n      this.state = {\n          date: \"\",\n          searchText: \"\",\n          roverName: \"\",\n          manifestData: [],\n          dayPhoto: [],\n          roverPhotos: [],\n          spaceInfo: [],\n          errorPopUp: false,\n          errorMsg: {\n            badDate: \"\",\n            noRover: \"\",\n            emptyInput: \"\",\n            noData: \"No data found based on the search request\",\n          },\n          loadingStatus: {\n            dayPhoto: false,\n            roverPhotos: false,\n            spaceInfo: false,\n          },\n          resultsReady: {\n            dayPhoto: false,\n            roverPhotos: false,\n            spaceInfo: false,\n          }\n      }\n  }\n\n  // loading logo while getting results ON\n  loadingStatus = (loadOn) => {\n    this.setState({\n      loadingStatus: {\n        ...this.state.loadingStatus,\n        [loadOn]: true,\n      }\n    })\n  }\n\n  // saving results + loading status OFF + turning ON the results link \n  gettingResults = (what, result) => {\n    // saving results in states\n    this.setState({\n      [what]: result,\n      // loading logo while getting results OFF\n      loadingStatus: {\n        ...this.state.loadingStatus,\n        [what]: false,\n      },\n      // showing \"See results\" link once we get the data\n      resultsReady: {\n        ...this.state.resultsReady,\n        [what]: true,\n      }\n    })\n  }\n\n  // If there's any error: showing error msg from API + popping up error window with responsive error msg + turining OFF loading status \n  handingError = (typeOfError, errorText, what) => {\n    // getting error msg from API to later pass as a prop to Error component\n    this.setState({\n      errorMsg: {\n        ...this.state.errorMsg,\n        [typeOfError]: errorText,\n      },\n      // Error window pop-up ON\n      errorPopUp: true,\n      // loading logo while getting results OFF\n      loadingStatus: {\n        ...this.state.loadingStatus,\n        [what]: false,\n      }\n    })\n  }\n\n\n  findPhotoDay = (e) => {\n    e.preventDefault();\n\n          this.loadingStatus('dayPhoto');\n\n          axios({\n            url: `https://api.nasa.gov/planetary/apod`,\n            method: 'GET',\n            params: {\n                api_key: `RQm9PKAWUOxPOwxSYLbTECB3ZtzrjLjlP4R9vIIm`,\n                date: this.state.date,\n            }\n        }).then( (res) => {\n            const photoOfTheDay = res.data;\n            this.gettingResults('dayPhoto', photoOfTheDay);\n\n        }).catch( error => {\n          this.handingError('badDate', error.response.data.msg, 'dayPhoto');\n        })\n  }\n\n// Curiosity landed on: 2012-08-06 - 2870 days spent\n// Opportunity landed on: 2004-01-25 - 5111 days spent\n// Spirit landed on: 2004-01-04 - 2208 days spent\n\n  findRoverPhotos = async (e) => {\n    e.preventDefault();\n      this.loadingStatus('roverPhotos');\n\n      // checking if one of the rovers is selected\n      if (!this.state.roverName) {\n        this.handingError('noRover', 'Please, select a rover', 'roverPhotos');\n\n        // exiting the fucntion\n        return\n      };\n\n      // waiting for MAX DAYS SPENT ON MARS by selected rover to PASS that day value into next API call to get photos\n        await axios({\n          url: `https://api.nasa.gov/mars-photos/api/v1/manifests/${this.state.roverName}/`,\n          method: 'GET',\n          params: {\n              api_key: `RQm9PKAWUOxPOwxSYLbTECB3ZtzrjLjlP4R9vIIm`,\n          }\n      }).then( (res) => {\n\n          this.setState({\n            manifestData: res.data.photo_manifest\n          })\n        }).catch( (er) => { console.log(er); });\n        \n      axios({\n        url: `https://api.nasa.gov/mars-photos/api/v1/rovers/${this.state.roverName}/photos`, // need to be dynamic\n        method: 'GET',\n        params: {\n            api_key: `RQm9PKAWUOxPOwxSYLbTECB3ZtzrjLjlP4R9vIIm`,\n            sol: Math.floor(Math.random()*(this.state.manifestData.max_sol)+1), // getting a random day out of all days spent by the selected rover on Mars\n            //earth_date: `2020-01-16`, // more practical would be to use sol instead of earth_date\n        }\n    }).then( (res) => {\n        const roverPhotos = res.data.photos;\n        this.gettingResults('roverPhotos', roverPhotos);\n\n    }).catch( (error) => {\n      this.handingError('noRover', error.response.data.errors, 'roverPhotos');\n    })\n  }\n\n  findSpaceInfo = (e) => {\n    e.preventDefault();\n    this.loadingStatus('spaceInfo');\n\n    axios({\n      url: `https://images-api.nasa.gov/search`,\n      method: 'GET',\n      params: {\n          q: this.state.searchText,\n      }\n    }).then( (res) => {\n      const spaceInfo = res.data.collection.items;\n\n      // showing error if there's no results based on the user input\n      if (!spaceInfo.length) { \n        this.setState({ errorPopUp: true, loadingStatus: {...this.state.loadingStatus, spaceInfo: false}, }) \n      } else {\n        this.gettingResults('spaceInfo', spaceInfo);\n      }\n    }).catch( (error) => {\n      this.handingError('emptyInput', error.response.data.reason, 'spaceInfo');  \n    })\n  }\n\n\n  userSelection = (e) => {\n    // saving data in stated based on the input used\n    console.log(e.target.name, e.target.value);\n    this.setState({\n      [e.target.name]: e.target.value,\n    })\n  }\n\n  closeError = () => {\n  // closing error window\n    this.setState({\n        errorPopUp: false,\n  // emptying error msg-es so that don't see them together if other error occurs\n        errorMsg: {\n          ...this.state.errorMsg,\n          badDate: \"\",\n          noRover: \"\",\n          emptyInput: \"\",\n        },\n    });\n  };\n\n  Nav = () => {\n    return(\n        <div>          \n              <header>\n                <h1>Explore Space</h1>\n              </header>\n\n              {\n                this.state.errorPopUp ? <Error states={this.state} closeWindow={this.closeError} /> : null\n              }\n\n    {/* LOOKING FOR PHOTO OF THE DAY */}\n              <section>\n                <h2>Photo of the day</h2>\n                <p>Select a desired date. If date is not selected, by default today's date is set. The result shows up the title of the photo of the selected date, author name, description and the photo as well.</p>\n\n                <form action=\"\">\n                  <div className=\"dayPhoto\">\n                    <label htmlFor=\"date\" className=\"srOnly\">Pick a date</label>\n                    <input onChange={this.userSelection} type=\"date\" id=\"date\" name=\"date\" placeholder=\"format e.g.: 2020-07-11\"/>\n\n                    <button onClick={this.findPhotoDay}>SEARCH</button>\n\n                    {/* SHOW RESULTS ONCE WE GET THEM */}\n                    {\n                      (this.state.resultsReady.dayPhoto && !this.state.loadingStatus.dayPhoto)\n                      ? <NavLink to=\"/photos/photooftheday\" className=\"resultsLink\">SEE RESULTS</NavLink>\n                      : null\n                    }\n\n                    {/* WAITING LOGO WHILE GETTING THE RESULTS */}\n                    {\n                      this.state.loadingStatus.dayPhoto\n                      ? \n                      <div className=\"loadingLogo\">\n                        <p>Loading</p>\n                        <div aria-hidden=\"true\">\n                          <div className=\"line\" aria-hidden=\"true\"></div>\n                          <div className=\"line\" aria-hidden=\"true\"></div>\n                          <div className=\"line\" aria-hidden=\"true\"></div>\n                        </div>\n                      </div>\n                      : null\n                    }\n                  </div>\n                </form>\n\n\n              </section>\n\n    {/* LOOKING FOR ROVER PHOTOS */}\n              <section>\n                <h2>Mars Rover photos</h2>\n                <p>Select a rover. The result shows up photos taken by a selected rover on one of the days, information about rover; when it left Earth, landed on Mars, how many photos took(taken if still operates) as well as when the last photos were taken.</p>\n\n                <form action=\"\">\n                  <div className=\"roverPhotos\">\n                    <label htmlFor=\"rover\" className=\"srOnly\">Select a rover</label>\n\n                    <select onChange={ this.userSelection } type=\"rover\" id=\"rover\" name=\"roverName\">\n                      <option name=\"roverName\" value=\"\">Pick a Mars rover</option>\n                      <option name=\"roverName\" value=\"spirit\">Spirit</option>\n                      <option name=\"roverName\" value=\"opportunity\">Opportunity</option>\n                      <option name=\"roverName\" value=\"curiosity\">Curiosity</option>\n                    </select>\n\n                    <button onClick={this.findRoverPhotos}>FIND</button>\n\n                    {\n                      (this.state.resultsReady.roverPhotos && !this.state.loadingStatus.roverPhotos)\n                      ?<NavLink to=\"/photos/roverPhotos\" className=\"resultsLink\">SEE RESULTS</NavLink>\n                      : null\n                    }\n\n                    {\n                      this.state.loadingStatus.roverPhotos\n                      ? \n                      <div className=\"loadingLogo\">\n                        <p>Loading</p>\n                        <div aria-hidden=\"true\">\n                          <div className=\"line\" aria-hidden=\"true\"></div>\n                          <div className=\"line\" aria-hidden=\"true\"></div>\n                          <div className=\"line\" aria-hidden=\"true\"></div>\n                        </div>\n                      </div>\n                      : null\n                    }\n                  </div>\n                </form>\n              </section>\n\n    {/* LOOKING FOR ADDITIONAL SPACE INFO */}\n              <section>\n                <h2>Space information</h2>\n                <p>Search space information based on the search input. The result shows up a list of items based on user requets. The list includes title of the event, its photo and description.</p>\n\n                <form action=\"\">\n                  <div className=\"spaceInfo\">\n                    <label htmlFor=\"text\" className=\"srOnly\">Input your search query</label>\n                    <input onChange={this.userSelection} type=\"text\" name=\"searchText\" id=\"text\" placeholder=\"e.g. Nebulae\"/>\n                    \n                    <button onClick={this.findSpaceInfo}>FIND</button>\n\n                    {\n                    (this.state.resultsReady.spaceInfo && !this.state.loadingStatus.spaceInfo)\n                    ? <NavLink to=\"/photos/spaceInfo\" className=\"resultsLink\">SEE RESULTS</NavLink>\n                    \n                    : null\n                    }\n\n                    {\n                    this.state.loadingStatus.spaceInfo\n                    ?\n                    <div className=\"loadingLogo\">\n                      <p>Loading</p>\n                      <div aria-hidden=\"true\">\n                        <div className=\"line\" aria-hidden=\"true\"></div>\n                        <div className=\"line\" aria-hidden=\"true\"></div>\n                        <div className=\"line\" aria-hidden=\"true\"></div>\n                      </div>\n                    </div>\n                    : null\n                    }\n                  </div>\n                </form>\n              </section>\n        </div>\n    )\n  }\n\n  Footer = () => {\n    return (\n      <footer>\n        <p>2020 Made by Illia Nikitin</p> \n        <a href=\"https://github.com/Illia16\" className=\"github\" target=\"_blank\" aria-label=\"github icon for Illia's profile\"><i className=\"fab fa-github\" aria-hidden=\"true\"></i></a>\n        <a href=\"https://www.linkedin.com/in/illia-nikitin-a4a637122/\" className=\"linkedin\" target=\"_blank\" aria-label=\"linkedin icon for Illia's profile\"><i className=\"fab fa-linkedin\" aria-hidden=\"true\"></i></a>\n      </footer>\n    )\n  }\n\n\n  // 3 result components: dayPhoto, roverPhotos, spaceInfo\n  dayPhoto = () => {\n    const {title, url, copyright, date, explanation} = this.state.dayPhoto;\n\n    return(\n        <div className=\"dayPhotoRes\">\n            <h3>{title}</h3>\n            {this.state.dayPhoto.hasOwnProperty(\"copyright\") ? <p>Photo of the day <span>{date}</span> by {copyright}</p> : <p>Photo of the day <span>{date}</span> by unknown author</p> }\n            <p>{explanation}</p>\n            <div>\n              <img src={url} alt={title}/>\n            </div>\n\n            <div className=\"seeResLink\">\n              <NavLink to={`/`} className=\"goBackLink\">GO BACK</NavLink>\n            </div>\n        </div>\n    )\n  }\n\n  RoverPhotos = () => {\n    const [{earth_date: earthDate, rover:{landing_date: landingDate, launch_date: launchDate, name: roverName, status: roverStatus}}] = this.state.roverPhotos\n\n    const {max_date, total_photos} = this.state.manifestData\n\n    return(\n      <div className=\"roverPhotosRes\">\n        <h3>{roverName} rover photos </h3>\n        <p>Photos taken on <span>{earthDate}</span></p>\n        <p>Left Earth <span>{launchDate}</span></p>\n        <p>Landed on Mars <span>{landingDate}</span></p>\n        <p>Total photos taken <span>{total_photos}</span></p>\n        <p>The last photos taken on <span>{max_date}</span></p>\n        <p>Status <span>{roverStatus}</span></p>\n\n        <ul className=\"roverPhotos\">\n          {\n            this.state.roverPhotos.map( (obj) => {\n              return(\n                <li key={obj.id}><img src={obj.img_src} alt={`taken by ${obj.rover.name} on ${obj.earth_date}`}/></li>\n              )\n            })\n          }\n        </ul>\n        <div className=\"seeResLink\">\n          <NavLink to={`/`} className=\"goBackLink\">GO BACK</NavLink>\n        </div>\n      </div>\n    )\n  }\n\n  SpaceInfo = () => {\n    return(\n      <div>\n        <h3>Space Information</h3>\n\n        <ul className=\"spaceInfoRes\">\n          {\n            this.state.spaceInfo.slice(0, 20).map( (obj) => {\n              console.log(obj);\n              console.log(obj.hasOwnProperty('links'));\n\n              return(\n                <li key={obj.data[0].nasa_id}>\n                  <h4>{obj.data[0].title}</h4>\n                  {\n                    obj.hasOwnProperty('links') ? <div className=\"imgParent\"><img src={obj.links[0].href} alt={`${obj.data[0].title}`}/></div> : null\n                  }\n                  <p>{obj.data[0].description}</p>\n                  </li>\n              )\n            })\n          }\n        </ul>\n        <div className=\"seeResLink\">\n          <NavLink to={`/`} className=\"goBackLink\">GO BACK</NavLink>\n        </div>\n      </div>\n    )\n  }\n  \n\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <BgVideo />\n\n        <div className=\"App wrapper\">\n          <Route exact path=\"/\" component={ this.Nav } />\n\n          {/* <Route exact path=\"/photos\" component={ this.Photos } /> */}\n          <Route exact path=\"/photos/photooftheday\" component={this.dayPhoto} />\n          <Route exact path=\"/photos/roverPhotos\" component={ this.RoverPhotos } />\n          <Route exact path=\"/photos/spaceInfo\" component={ this.SpaceInfo } />\n        </div>\n\n        <Route exact path=\"/\" component={ this.Footer } />\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}