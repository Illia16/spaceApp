{"version":3,"sources":["components/presentational/Background/BgVideo2.mp4","helpers/setTodayDate/setTodayDate.js","components/presentational/Background/BgVideo.js","components/presentational/Error/Error.js","components/presentational/Header.js","components/presentational/Loading/LoadingLogo.js","components/views/MainPage/MainPageApod.js","components/views/MainPage/MainPageRoverPhotos.js","components/views/MainPage/MainPageAddInfo.js","components/presentational/GoBackButton.js","components/views/Results/ResultsDayPhoto.js","components/views/Results/ResultsRoverPhotos.js","components/views/Results/ResultsAddInfo.js","helpers/checkPrevNextPages/checkPrevNextPages.js","components/views/Results/Results.js","components/views/MainPage/MainPage.js","components/presentational/Footer/Footer.js","components/presentational/404/ErrorPage.js","components/smart/AppContext.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","today","Date","getFullYear","String","getMonth","padStart","getDate","join","BgVideo","spaceVideoRef","useRef","useState","bgVideo","toggleBg","autoPlay","loop","muted","ref","onCanPlay","current","playbackRate","className","src","Video","type","htmlFor","onChange","e","checked","id","onHandleColor","offHandleColor","onColor","offColor","checkedIcon","viewBox","xmlns","fillRule","clipRule","d","uncheckedIcon","Error","props","propsForError","showError","errorMsg","focusTrapOptions","escapeDeactivates","onClick","Header","LoadingLogo","aria-hidden","MainPageApod","propsForApod","isLoading","dayPhoto","results","userInput","userSelectedQuery","findPhotoDay","action","name","placeholder","value","date","to","MainPageRoverPhotos","propsForRovers","roverPhotos","findRoverPhotos","roverName","length","MainPageAddInfo","propsForAddInfo","spaceInfo","findSpaceInfo","searchText","hasOwnProperty","GoBackButton","changePage","ResultsDayPhoto","propsForDayPhoto","title","url","copyright","explanation","media_type","alt","frameBorder","allow","allowFullScreen","width","height","ResultsRoverPhotos","earthDate","earth_date","rover","landingDate","landing_date","launchDate","launch_date","roverStatus","status","manifestData","toLowerCase","total_photos","max_date","map","obj","key","img_src","href","target","rel","ResultsAddInfo","checkingPages","pages","split","checkPrevNextPages","links","console","log","window","innerHeight","items","data","nasa_id","offset","unmountIfInvisible","once","description","aria-label","scrollTo","document","body","scrollHeight","Results","currentPage","paths","apodPath","roverPath","infoPath","exact","path","MainPage","isThereError","location","useLocation","includes","pathname","Footer","ErrorPage","UserInput","createContext","AppContext","children","userSelection","spirit","opportunity","curiosity","getManifestData","getData","setErrorMsg","setLoading","useEffect","roverCall","then","res","photos","catch","error","response","errors","manifestCall","axios","method","params","api_key","sol","Math","floor","random","max_sol","findSpaceInfoApiCall","q","page","space","collection","reason","Provider","preventDefault","setTodayDate","msg","photo_manifest","er","message","App","useContext","basename","process","component","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,sC,iBCO3CD,EAAOC,QAPP,WACI,IAAMC,EAAQ,IAAIC,KAGlB,MAFgB,CAACD,EAAME,cAAeC,OAAOH,EAAMI,WAAW,GAAGC,SAAS,EAAG,KAAMF,OAAOH,EAAMM,WAAWD,SAAS,EAAG,MAC9FE,KAAK,O,iVCiDnBC,EA/CC,WACZ,IAAMC,EAAgBC,mBADJ,EAKUC,oBAAS,GALnB,mBAKXC,EALW,KAKFC,EALE,KAOlB,OACI,6BAEID,EACI,2BACIE,UAAQ,EACRC,MAAI,EACJC,OAAK,EACLC,IAAMR,EACNS,UAAY,WAdAT,EAAcU,QAAQC,aAAe,IAejDC,UAAU,cAEd,4BAAQC,IAAKC,IAAOC,KAAK,eAGzB,yBAAKH,UAAU,iBAGnB,yBAAKA,UAAU,WACX,2BAAOI,QAAQ,WAAWJ,UAAU,UAApC,2CACA,kBAAC,IAAD,CACIK,SAAU,SAAAC,GAAC,OAAId,GAAUD,IACzBgB,QAAShB,EACTiB,GAAG,WACHC,cAAgB,UAChBC,eAAiB,UACjBC,QAAU,UACVC,SAAW,UACXC,YACI,yBAAKC,QAAQ,eAAeC,MAAM,6BAA6BC,SAAS,UAAUC,SAAS,WAAU,0BAAMC,EAAE,iVAEjHC,cACI,yBAAKL,QAAQ,cAAcC,MAAM,6BAA6BC,SAAS,UAAUC,SAAS,WAAU,0BAAMC,EAAE,6O,+BCvBrHE,EAjBD,SAACC,GAAW,IAAD,EAC8BA,EAA3CC,cAAiBC,EADJ,EACIA,UAAWC,EADf,EACeA,SAEpC,OACI,yBAAKxB,UAAU,aACX,kBAAC,IAAD,CAAWyB,iBAAkB,CACzBC,mBAAoB,IAEpB,yBAAK1B,UAAU,SACX,2BAAIwB,GACJ,4BAAQG,QAAS,kBAAMJ,GAAU,KAAjC,aCJLK,EARA,WACX,OACI,gCACA,+C,OCWOC,G,MAbK,WAChB,OACI,yBAAK7B,UAAU,eACX,sCACA,yBAAK8B,cAAY,QACb,yBAAK9B,UAAU,OAAO8B,cAAY,SAClC,yBAAK9B,UAAU,OAAO8B,cAAY,SAClC,yBAAK9B,UAAU,OAAO8B,cAAY,aCqBnCC,EA1BM,SAACV,GAAW,IAAD,EAC6EA,EAAjGW,aAAgBC,EADI,EACJA,UAAqBC,EADjB,EACOC,QAAUD,SAAWE,EAD5B,EAC4BA,UAAWC,EADvC,EACuCA,kBAAmBC,EAD1D,EAC0DA,aAEtF,OACI,iCACI,sDACA,+NAEA,0BAAMC,OAAO,IACT,yBAAKvC,UAAU,YACX,2BAAOI,QAAQ,OAAOJ,UAAU,UAAhC,eACA,2BAAOK,SAAUgC,EAAmBlC,KAAK,OAAOK,GAAG,OAAOgC,KAAK,OAAOC,YAAY,mBAAmBC,MAAON,EAAUO,OAEtH,4BAAQhB,QAASW,GAAjB,UAICJ,EAASS,OAASV,EAAUU,KAAQ,kBAAC,IAAD,CAASC,GAAG,iBAAiB5C,UAAU,eAAvC,eACnCiC,EAAUU,KAAO,kBAAC,EAAD,MAAkB,SCc1CE,EAhCa,SAACxB,GAAW,IAAD,EAC8EA,EAAzGyB,eAAkBb,EADS,EACTA,UAAqBc,EADZ,EACEZ,QAAUY,YAAcX,EAD1B,EAC0BA,UAAWC,EADrC,EACqCA,kBAAmBW,EADxD,EACwDA,gBAE3F,OACI,iCACI,iDACA,8QAEA,0BAAMT,OAAO,IACT,yBAAKvC,UAAU,eACX,2BAAOI,QAAQ,QAAQJ,UAAU,UAAjC,kBAEA,4BAAQK,SAAWgC,EAAoBlC,KAAK,QAAQK,GAAG,QAAQgC,KAAK,YAAYE,MAAON,EAAUa,WAC7F,4BAAQT,KAAK,YAAYE,MAAM,IAA/B,qBACA,4BAAQF,KAAK,YAAYE,MAAM,UAA/B,UACA,4BAAQF,KAAK,YAAYE,MAAM,eAA/B,eACA,4BAAQF,KAAK,YAAYE,MAAM,aAA/B,aACA,4BAAQF,KAAK,YAAYE,MAAM,gBAA/B,iBAGJ,4BAAQf,QAAUqB,GAAlB,UAGKD,EAAYG,SAAWjB,EAAUgB,UAAa,kBAAC,IAAD,CAASL,GAAG,eAAe5C,UAAU,eAArC,eAC7CiC,EAAUgB,UAAY,kBAAC,EAAD,MAAkB,SCAnDE,EAxBS,SAAC9B,GAAW,IAAD,EAC+EA,EAAtG+B,gBAAmBnB,EADI,EACJA,UAAqBoB,EADjB,EACOlB,QAAUkB,UAAYjB,EAD7B,EAC6BA,UAAWC,EADxC,EACwCA,kBAAmBiB,EAD3D,EAC2DA,cAC1F,OACI,iCACI,iDACA,8MAEA,0BAAMf,OAAO,IACT,yBAAKvC,UAAU,aACX,2BAAOI,QAAQ,OAAOJ,UAAU,UAAhC,2BACA,2BAAOK,SAAUgC,EAAmBlC,KAAK,OAAOqC,KAAK,aAAahC,GAAG,OAAOkC,MAAON,EAAUmB,WAAYd,YAAY,iBAErH,4BAAQd,QAAS2B,GAAjB,UAGCD,EAAUG,eAAe,WAAavB,EAAUsB,WAAc,kBAAC,IAAD,CAASX,GAAG,aAAa5C,UAAU,eAAnC,eAC7DiC,EAAUsB,WAAa,kBAAC,EAAD,MAAkB,S,OCHhDE,G,MAfM,SAACpC,GAAW,IACrBqC,EAAerC,EAAfqC,WAER,OACIA,EACA,yBAAK1D,UAAU,cACX,kBAAC,IAAD,CAAS4C,GAAE,IAAO5C,UAAU,aAAa2B,QAAS,kBAAM+B,EAAW,MAAnE,YAGJ,yBAAK1D,UAAU,cACX,kBAAC,IAAD,CAAS4C,GAAE,IAAO5C,UAAU,cAA5B,cCsBG2D,EAhCS,SAAEtC,GAAY,IAAD,EACsDA,EAA/EuC,iBAAoBC,EADK,EACLA,MAAOC,EADF,EACEA,IAAKC,EADP,EACOA,UAAWpB,EADlB,EACkBA,KAAMqB,EADxB,EACwBA,YAAaC,EADrC,EACqCA,WAElE,OACI,yBAAKjE,UAAU,eACX,4BAAK6D,GAEDxC,EAAMuC,iBAAiBJ,eAAe,aACtC,2BAAmB,UAAfS,EAAyB,mBAAqB,mBAAlD,IAAsE,8BAAOtB,GAA7E,OAA8FoB,GAE9F,2BAAmB,UAAfE,EAAyB,mBAAqB,mBAAlD,IAAsE,8BAAOtB,GAA7E,sBAEJ,2BAAIqB,GACJ,6BAEuB,UAAfC,EAAyB,yBAAKhE,IAAK6D,EAAKI,IAAKL,IACzC,4BACI5D,IAAK6D,EACLK,YAAY,IACZC,MAAM,4BACNC,iBAAe,EACfR,MAAM,QACNS,MAAM,QACNC,OAAO,WAIvB,kBAAC,EAAD,QCGDC,EA9BY,SAAEnD,GAAY,IAAD,cAC0IA,EAAlK0B,YADwB,MACK0B,EADL,EACPC,WADO,IACgBC,MAAuBC,EADvC,EACyBC,aAAwCC,EADjE,EACoDC,YAA+B9B,EADnF,EAC6ET,KAAyBwC,EADtG,EAC8FC,OAA2BC,EAAiB7D,EAAjB6D,aACzJ,OACI,yBAAKlF,UAAU,kBACX,sCACA,yCAAc,8BAAOiD,IACrB,8CAAmB,8BAAOwB,IAC1B,+CAAoB,8BAAOK,IAC3B,mDAAwB,8BAAOF,IAC/B,oDAA0B3B,EAA1B,IAAqC,8BAAOiC,EAAajC,EAAUkC,eAAeC,eAClF,uDAA4B,8BAAOF,EAAajC,EAAUkC,eAAeE,WACzE,qCAAU,8BAAOL,IAEjB,4BAEQ3D,EAAM0B,YAAYuC,KAAK,SAACC,GACpB,OACI,wBAAIC,IAAKD,EAAI/E,IACT,yBAAKP,IAAKsF,EAAIE,QAASvB,IAAG,mBAAcqB,EAAIZ,MAAMnC,KAAxB,eAAmC+C,EAAIb,cACjE,uBAAGgB,KAAMH,EAAIE,QAASE,OAAO,SAASC,IAAI,uBAA1C,mBAMpB,kBAAC,EAAD,Q,iBCpBhB,IA8DeC,EA9DQ,SAAExE,GAAY,IACrBqC,EAAerC,EAAfqC,WACFoC,ECVC,SAA4BC,GAGvC,GAAKA,EAAL,CAIA,GAAsB,IAAjBA,EAAM7C,OAGP,MAAO,CAFU6C,EAAM,GAAGL,KAAKM,MAAM,KAAK,GAAGA,MAAM,KAAK,GACvCD,EAAM,GAAGL,KAAKM,MAAM,KAAK,GAAGA,MAAM,KAAK,IAErD,GAAqB,IAAjBD,EAAM7C,OAAc,CAC3B,GAAqB,SAAjB6C,EAAM,GAAGH,IAET,MAAO,CAAC,OADSG,EAAM,GAAGL,KAAKM,MAAM,KAAK,GAAGA,MAAM,KAAK,IAErD,GAAqB,SAAjBD,EAAM,GAAGH,IAEhB,MAAO,CAAC,OADSG,EAAM,GAAGL,KAAKM,MAAM,KAAK,GAAGA,MAAM,KAAK,MDNtCC,CAAmB5E,EAAM+B,gBAAgB8C,OAI/D,OAHAC,QAAQC,IAAIN,GACZK,QAAQC,IAAI/E,GACZ8E,QAAQC,IAAIC,OAAOC,aAEf,6BACI,iDAEA,wBAAItG,UAAU,gBAGNqB,EAAM+B,gBAAgBmD,MAAMjB,KAAI,SAACC,GAC7B,OACI,kBAAC,IAAD,CACIC,IAAKD,EAAIiB,KAAK,GAAGC,QACjBlC,OAAQ,IACRmC,OAAQ,EAAE,IAAI,KACdjE,YAAa,kBAAC,EAAD,MACbkE,oBAAoB,EACpBC,MAAI,GAEJ,4BACI,4BAAKrB,EAAIiB,KAAK,GAAG3C,OAEb0B,EAAI/B,eAAe,SAAW,yBAAKxD,UAAU,aAAY,yBAAKC,IAAKsF,EAAIW,MAAM,GAAGR,KAAMxB,IAAG,UAAKqB,EAAIiB,KAAK,GAAG3C,UAAoB,KAElI,2BAAI0B,EAAIiB,KAAK,GAAGK,mBASI,UAAvCf,GAAiBA,EAAc,IAC5B,yBAAK9F,UAAU,iBACX,4BAAQ2B,QAAU,kBAAM+B,EAAWoC,EAAc,KAAMgB,aAAW,2BAA0B,uBAAG9G,UAAU,sBAAsB8B,cAAY,WAEzG,UAAvCgE,GAAiBA,EAAc,IAC9B,yBAAK9F,UAAU,iBACX,4BAAQ2B,QAAU,kBAAM+B,EAAWoC,EAAc,KAAMgB,aAAW,uBAAsB,uBAAG9G,UAAU,uBAAuB8B,cAAY,WAE9IgE,EACF,yBAAK9F,UAAU,iBACX,4BAAQ2B,QAAU,kBAAM+B,EAAWoC,EAAc,KAAMgB,aAAW,2BAA0B,uBAAG9G,UAAU,sBAAsB8B,cAAY,UAC3I,4BAAQH,QAAU,kBAAM+B,EAAWoC,EAAc,KAAMgB,aAAW,uBAAsB,uBAAG9G,UAAU,uBAAuB8B,cAAY,WAE1I,KAEN,kBAAC,EAAD,CAAe4B,WAAYA,IAE3B,yBAAK1D,UAAU,aACX,4BAAQ2B,QAAU,kBAAM0E,OAAOU,SAAS,EAAGC,SAASC,KAAKC,gBAAzD,oBACA,4BAAQvF,QAAU,kBAAM0E,OAAOU,SAAS,EAAG,KAA3C,oBE7BLI,EA1BC,SAAE9F,GAAY,IAAD,EAMjBA,EALAc,QAASD,EADQ,EACRA,SAAUa,EADF,EACEA,YAAaM,EADf,EACeA,UAChC6B,EAIA7D,EAJA6D,aACAkC,EAGA/F,EAHA+F,YACA1D,EAEArC,EAFAqC,WAJiB,cAMjBrC,EADAgG,MALiB,GAKCC,GALD,WAKWC,EALX,KAKsBC,EALtB,KASzB,OACI,6BACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAMJ,GACf,kBAAC,EAAD,CAAiB1D,iBAAkB1B,KAGvC,kBAAC,IAAD,CAAOuF,OAAK,EAACC,KAAMH,GACf,kBAAC,EAAD,CAAoBxE,YAAaA,EAAamC,aAAcA,KAGhE,kBAAC,IAAD,CAAOuC,OAAK,EAACC,KAAMF,GACf,kBAAC,EAAD,CAAgBpE,gBAAiBC,EAAW+D,YAAaA,EAAa1D,WAAYA,OC2BnFiE,EA5CE,SAAEtG,GAAY,IACnBuG,EAOAvG,EAPAuG,aADkB,EAQlBvG,EANAe,UAAYO,EAFM,EAENA,KAAMM,EAFA,EAEAA,UAAWM,EAFX,EAEWA,WAC7BpB,EAKAd,EALAc,QACA+C,EAIA7D,EAJA6D,aACAkC,EAGA/F,EAHA+F,YACA1D,EAEArC,EAFAqC,WACA2D,EACAhG,EADAgG,MAGJQ,EAAWC,cAEf,OACI,6BACI,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,KACd,kBAAC,EAAD,MAEEE,EAAe,kBAAC,EAAD,CAAOtG,cAAeD,IAAW,KAGlD,kBAAC,EAAD,CAAcW,aAAcX,IAG5B,kBAAC,EAAD,CAAqByB,eAAgBzB,IAGrC,kBAAC,EAAD,CAAiB+B,gBAAiB/B,KAGjCsB,GAASM,GAAcM,IAAe8D,EAAMU,SAASF,EAASG,WAAmC,MAAtBH,EAASG,SAEzF,kBAAC,EAAD,CACI7F,QAASA,EACT+C,aAAcA,EACdkC,YAAaA,EACb1D,WAAYA,EACZ2D,MAAOA,IAPmG,kBAAC,IAAD,CAAUzE,GAAG,UAUxHyE,EAAMU,SAASF,EAASG,WAAa,kBAAC,IAAD,CAAUpF,GAAG,WCxClDqF,G,MARA,WACX,OACI,gCACI,wDCOGC,G,MATG,SAAC1G,GACf,OACI,yBAAKxB,UAAU,aACX,4BAAKwB,GACL,kBAAC,EAAD,S,iDCFN2G,EAAYC,0BAQH,SAASC,EAAT,GAAkC,IAAZC,EAAW,EAAXA,SAAW,EAGThJ,mBAAS,CAACqD,KAAM,GAAIM,UAAW,GAAIM,WAAY,KAHtC,mBAGrCnB,EAHqC,KAG1BmG,EAH0B,OAIJjJ,mBAAS,CAAEkJ,OAAQ,GAAIC,YAAa,GAAIC,UAAW,KAJ/C,mBAIrCxD,EAJqC,KAIvByD,EAJuB,OAKjBrJ,mBAAS,CAAE4C,SAAU,GAAIa,YAAa,GAAIM,UAAW,KALpC,mBAKrClB,EALqC,KAK5ByG,EAL4B,OAOVtJ,mBAAS,IAPC,mBAOrC8H,EAPqC,KAOxB1D,EAPwB,OAUVpE,oBAAS,GAVC,mBAUrCsI,EAVqC,KAUvBrG,EAVuB,OAWZjC,mBAAS,IAXG,mBAWrCkC,EAXqC,KAW3BqH,EAX2B,OAcZvJ,mBAAS,CAACqD,MAAM,EAAOM,WAAW,EAAOM,YAAY,IAdzC,mBAcrCtB,EAdqC,KAc1B6G,EAd0B,KAkE5CC,qBAAU,WACF7D,EAAa9C,EAAUa,YACvB+F,IAAYC,MAAK,SAACC,GACdJ,EAAW,2BAAK7G,GAAN,IAAiBgB,WAAW,KACtC2F,EAAQ,2BAAKzG,GAAN,IAAeY,YAAamG,EAAI1C,KAAK2C,aAC7CC,OAAM,SAACC,GACNP,EAAW,2BAAK7G,GAAN,IAAiBgB,WAAW,KACtC1B,GAAU,GACVsH,EAAYQ,EAAMC,SAAS9C,KAAK+C,aAGzC,CAACrE,EAAa9C,EAAUa,aAG3B,IAAMuG,EAAe,WACjB,OAAOC,IAAM,CACT3F,IAAI,qDAAD,OAAuD1B,EAAUa,UAAjE,KACHyG,OAAQ,MACRC,OAAQ,CACJC,QAAQ,+CAKdZ,EAAY,WACd,OAAOS,IAAM,CACT3F,IAAI,kDAAD,OAAoD1B,EAAUa,UAA9D,WACHyG,OAAQ,MACRC,OAAQ,CACJC,QAAQ,2CACRC,IAAKC,KAAKC,MAAMD,KAAKE,SAAY9E,EAAa9C,EAAUa,WAAWgH,QAAW,OAqBpFC,EAAuB,WACzBT,IAAM,CACF3F,IAAI,qCACJ4F,OAAQ,MACRC,OAAQ,CACJQ,EAAG/H,EAAUmB,WACb6G,KAAMhD,GAAe,KAG5B6B,MAAK,SAACC,GACH,IAAMmB,EAAQnB,EAAI1C,KAAK8D,WAElBD,EAAM9D,MAAMrD,QAKb4F,EAAW,2BAAK7G,GAAN,IAAiBsB,YAAY,KACvCqF,EAAQ,2BAAKzG,GAAN,IAAekB,UAAWgH,OALjCvB,EAAW,2BAAK7G,GAAN,IAAiBsB,YAAY,KACvChC,GAAU,GACVsH,EAAY,6CAMnBO,OAAM,SAACC,GACJP,EAAW,2BAAK7G,GAAN,IAAiBsB,YAAY,KACvChC,GAAU,GACVsH,EAAYQ,EAAMC,SAAS9C,KAAK+D,YAWxC,OAPAxB,qBAAU,WACF3B,IACA8C,IACA7D,OAAOU,SAAS,EAAG,MAExB,CAACK,IAGA,kBAACe,EAAUqC,SAAX,CAAoB9H,MAAO,CACvBL,kBA1IkB,SAAC/B,GACvBA,EAAEmK,iBACFlC,EAAc,2BAAInG,GAAL,kBAAiB9B,EAAEqF,OAAOnD,KAAOlC,EAAEqF,OAAOjD,UA0InD2E,MA3JM,CAAC,IAAK,iBAAkB,eAAgB,aAAc,QA6J5DjF,UAAWA,EACXmG,cAAeA,EACfpG,QAASA,EACTyG,QAASA,EACT1D,aAAaA,EACbyD,gBAAgBA,EAChBvB,YAAYA,EACZ1D,WAAWA,EAEXkE,aAAcA,EACdrG,UAAWA,EACXC,SAAUA,EACVqH,YAAaA,EAEb5G,UAAWA,EACX6G,WAAYA,EAEZxG,aAzJa,SAAChC,GAClBA,EAAEmK,iBAEF3B,EAAW,2BAAI7G,GAAL,IAAgBU,MAAM,KAChC8G,IAAM,CACF3F,IAAI,sCACJ4F,OAAQ,MACRC,OAAQ,CACJC,QAAQ,2CACRjH,KAAMP,EAAUO,MAAQ+H,SAE7BzB,MAAM,SAACC,GACNJ,EAAW,2BAAI7G,GAAL,IAAgBU,MAAM,KAChCiG,EAAQ,2BAAIzG,GAAL,IAAcD,SAAUgH,EAAI1C,QAEnC+B,EAAc,2BAAInG,GAAL,IAAgBO,KAAMuG,EAAI1C,KAAK7D,WAE7CyG,OAAO,SAAAC,GACNP,EAAW,2BAAI7G,GAAL,IAAgBU,MAAM,KAChCpB,GAAU,GACVsH,EAAYQ,EAAMC,SAAS9C,KAAKmE,SAsIhC3H,gBAhIgB,SAAC1C,GAGrB,GAFAA,EAAEmK,kBAEGrI,EAAUa,UAGX,OAFA1B,GAAU,QACVsH,EAAY,uBAIhBC,EAAW,2BAAK7G,GAAN,IAAiBgB,WAAW,KACtCuG,IAAeP,MAAM,SAACC,GAClBP,EAAgB,2BAAKzD,GAAN,kBAAqB9C,EAAUa,UAAYiG,EAAI1C,KAAKoE,qBACpExB,OAAM,SAACyB,GACNtJ,GAAU,GACVsH,EAAYgC,EAAGC,aAmHfxH,cA1Ec,SAAChD,GAInB,GAHAA,EAAEmK,kBAGGrI,EAAUmB,WAGX,OAFAhC,GAAU,QACVsH,EAAY,uBAGZC,EAAW,2BAAK7G,GAAN,IAAiBsB,YAAY,KACvC2G,OAmEE5B,GC5ICyC,MA3Cf,WAAe,MDDJC,qBAAW7C,GCGZd,EAFK,EAELA,MAAOjF,EAFF,EAEEA,UAAW8C,EAFb,EAEaA,aAAc/C,EAF3B,EAE2BA,QAASiF,EAFpC,EAEoCA,YAAa1D,EAFjD,EAEiDA,WAAYrB,EAF7D,EAE6DA,kBAClEuF,EAHK,EAGLA,aAAcrG,EAHT,EAGSA,UAAWC,EAHpB,EAGoBA,SACzBS,EAJK,EAILA,UACAK,EALK,EAKLA,aACAU,EANK,EAMLA,gBACAM,EAPK,EAOLA,cAEN,OACE,kBAAC,IAAD,CAAQ2H,SAAUC,aAChB,kBAAC,EAAD,MACE,yBAAKlL,UAAU,eACb,kBAAC,IAAD,CAAOyH,OAAK,EAACC,KAAK,OAAOyD,UAAW,kBAAMjD,EAAU,2BACpD,kBAAC,IAAD,CAAOT,OAAK,EAACC,KAAK,OAAOyD,UAAW,kBAAMjD,EAAU,yBACpD,kBAAC,IAAD,CAAOR,KAAK,KACR,kBAAC,EAAD,CACEE,aAAcA,EACdrG,UAAWA,EACXC,SAAUA,EAEVS,UAAWA,EACXG,UAAWA,EACXC,kBAAmBA,EACnBC,aAAcA,EACdH,QAASA,EAETa,gBAAiBA,EACjBM,cAAeA,EAEf4B,aAAcA,EACdxB,WAAYA,EACZ0D,YAAaA,EAEbC,MAAOA,MAIjB,kBAAE,EAAF,QCrCY+D,QACW,cAA7B/E,OAAOwB,SAASwD,UAEe,UAA7BhF,OAAOwB,SAASwD,UAEhBhF,OAAOwB,SAASwD,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACpD,EAAD,KACE,kBAAC,EAAD,QAGJrB,SAAS0E,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5C,MAAK,SAAA6C,GACJA,EAAaC,gBAEd3C,OAAM,SAAAC,GACLlD,QAAQkD,MAAMA,EAAMyB,c","file":"static/js/main.bbad7b51.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BgVideo2.88bfffbc.mp4\";","function setTodayDate() {\r\n    const today = new Date();\r\n    const dateArr = [today.getFullYear(), String(today.getMonth()+1).padStart(2, '0'), String(today.getDate()).padStart(2, '0')];\r\n    const todayRes = dateArr.join('-');\r\n    return todayRes;\r\n};\r\n\r\nmodule.exports = setTodayDate;","import React, { useRef, useState } from 'react';\r\nimport \"./backgroundVideo.scss\";\r\nimport Video from \"./BgVideo2.mp4\";\r\nimport Switch from \"react-switch\";\r\n\r\nconst BgVideo = () => {\r\n    const spaceVideoRef = useRef();\r\n    const updateSpeed = () => { spaceVideoRef.current.playbackRate = 0.8; };\r\n\r\n    // hook to toogle between background VIDEO and PICTURE (so that the user can read without distraction)\r\n    const [bgVideo, toggleBg] = useState(false);\r\n\r\n    return(\r\n        <div>\r\n            {\r\n            bgVideo ?\r\n                <video\r\n                    autoPlay\r\n                    loop\r\n                    muted\r\n                    ref={ spaceVideoRef }\r\n                    onCanPlay={ () => updateSpeed() }\r\n                    className=\"bg bgVideo\"\r\n                >\r\n                <source src={Video} type=\"video/mp4\"/>\r\n                </video>\r\n                :\r\n                <div className=\"bg bgPicture\"></div>\r\n            }\r\n\r\n            <div className=\"bgOnOff\">\r\n                <label htmlFor=\"toggleBg\" className=\"srOnly\">toggle background from video to picture</label>\r\n                <Switch\r\n                    onChange={e => toggleBg(!bgVideo)}\r\n                    checked={bgVideo}\r\n                    id=\"toggleBg\"\r\n                    onHandleColor = '#000000'\r\n                    offHandleColor = '#000000'\r\n                    onColor = '#ffffff'\r\n                    offColor = '#ffffff'\r\n                    checkedIcon = {\r\n                        <svg viewBox=\"-10 -7 40 40\" xmlns=\"http://www.w3.org/2000/svg\" fillRule=\"evenodd\" clipRule=\"evenodd\"><path d=\"M24 22h-24v-20h24v20zm-1-19h-22v18h22v-18zm-1 16h-19l4-7.492 3 3.048 5.013-7.556 6.987 12zm-11.848-2.865l-2.91-2.956-2.574 4.821h15.593l-5.303-9.108-4.806 7.243zm-4.652-11.135c1.38 0 2.5 1.12 2.5 2.5s-1.12 2.5-2.5 2.5-2.5-1.12-2.5-2.5 1.12-2.5 2.5-2.5zm0 1c.828 0 1.5.672 1.5 1.5s-.672 1.5-1.5 1.5-1.5-.672-1.5-1.5.672-1.5 1.5-1.5z\"/></svg>\r\n                    }\r\n                    uncheckedIcon = {\r\n                        <svg viewBox=\"-6 -6 40 40\" xmlns=\"http://www.w3.org/2000/svg\" fillRule=\"evenodd\" clipRule=\"evenodd\"><path d=\"M24 23h-24v-21h24v21zm-20-1v-4h-3v4h3zm15 0v-19h-14v19h14zm4 0v-4h-3v4h3zm-6-9.5l-9 5v-10l9 5zm3 .5v4h3v-4h-3zm-16 4v-4h-3v4h3zm5-1.2l5.941-3.3-5.941-3.3v6.6zm11-7.8v4h3v-4h-3zm-16 4v-4h-3v4h3zm16-9v4h3v-4h-3zm-16 4v-4h-3v4h3z\"/></svg>\r\n                    }\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BgVideo;","import React from 'react';\r\nimport \"./errorWindow.scss\";\r\nimport FocusTrap from 'focus-trap-react'\r\n\r\nconst Error = (props) => {\r\n    const { propsForError: { showError, errorMsg } } = props;\r\n\r\n    return (\r\n        <div className=\"popupBack\">\r\n            <FocusTrap focusTrapOptions={{\r\n                escapeDeactivates : false,\r\n            }}>\r\n                <div className=\"popup\">\r\n                    <p>{errorMsg}</p>\r\n                    <button onClick={() => showError(false)}>CLOSE</button>\r\n                </div>\r\n            </FocusTrap>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Error;","import React from 'react';\r\n\r\nconst Header = () => {\r\n    return(\r\n        <header>\r\n        <   h1>Explore Space</h1>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport './waitingLogo.scss';\r\n\r\nconst LoadingLogo = () => {\r\n    return(\r\n        <div className=\"loadingLogo\">\r\n            <p>Loading</p>\r\n            <div aria-hidden=\"true\">\r\n                <div className=\"line\" aria-hidden=\"true\"></div>\r\n                <div className=\"line\" aria-hidden=\"true\"></div>\r\n                <div className=\"line\" aria-hidden=\"true\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadingLogo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport LoadingLogo from '../../presentational/Loading/LoadingLogo';\r\n\r\nconst MainPageApod = (props) => {\r\n    const { propsForApod: { isLoading, results: {dayPhoto}, userInput, userSelectedQuery, findPhotoDay } } = props;\r\n\r\n    return(\r\n        <section>\r\n            <h2>Photo/Video of the day</h2>\r\n            <p>Select a desired date. If date is not selected, by default today's date is set. The result shows up the title of the photo of the selected date, author name, description and the photo as well.</p>\r\n\r\n            <form action=\"\">\r\n                <div className=\"dayPhoto\">\r\n                    <label htmlFor=\"date\" className=\"srOnly\">Pick a date</label>\r\n                    <input onChange={userSelectedQuery} type=\"date\" id=\"date\" name=\"date\" placeholder=\"e.g.: 2020-07-11\" value={userInput.date}/>\r\n\r\n                    <button onClick={findPhotoDay}>SEARCH</button>\r\n\r\n                    {/* SHOW RESULTS ONCE WE GET THEM */}\r\n                    {\r\n                    (dayPhoto.date && !isLoading.date) ? <NavLink to=\"/photooftheday\" className=\"resultsLink\">SEE RESULTS</NavLink>\r\n                    : isLoading.date ? <LoadingLogo /> : null\r\n                    }\r\n                </div>\r\n            </form>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default MainPageApod;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport LoadingLogo from '../../presentational/Loading/LoadingLogo';\r\n\r\nconst MainPageRoverPhotos = (props) => {\r\n    const { propsForRovers: { isLoading, results: {roverPhotos}, userInput, userSelectedQuery, findRoverPhotos } } = props;\r\n\r\n    return(\r\n        <section>\r\n            <h2>Mars Rover photos</h2>\r\n            <p>Select a rover. The result shows up photos taken by a selected rover on one of the days, information about rover; when it left Earth, landed on Mars, how many photos took(taken if still operates) as well as when the last photos were taken.</p>\r\n\r\n            <form action=\"\">\r\n                <div className=\"roverPhotos\">\r\n                    <label htmlFor=\"rover\" className=\"srOnly\">Select a rover</label>\r\n\r\n                    <select onChange={ userSelectedQuery } type=\"rover\" id=\"rover\" name=\"roverName\" value={userInput.roverName}>\r\n                        <option name=\"roverName\" value=\"\">Pick a Mars rover</option>\r\n                        <option name=\"roverName\" value=\"spirit\">Spirit</option>\r\n                        <option name=\"roverName\" value=\"opportunity\">Opportunity</option>\r\n                        <option name=\"roverName\" value=\"curiosity\">Curiosity</option>\r\n                        <option name=\"roverName\" value=\"perseverance\">Perseverance</option>\r\n                    </select>\r\n\r\n                    <button onClick={ findRoverPhotos }>SEARCH</button>\r\n\r\n                    {\r\n                        (roverPhotos.length && !isLoading.roverName) ? <NavLink to=\"/roverPhotos\" className=\"resultsLink\">SEE RESULTS</NavLink>\r\n                        : isLoading.roverName ? <LoadingLogo /> : null\r\n                    }\r\n                </div>\r\n            </form>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default MainPageRoverPhotos;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport LoadingLogo from '../../presentational/Loading/LoadingLogo';\r\n\r\nconst MainPageAddInfo = (props) => {\r\n    const { propsForAddInfo: { isLoading, results: {spaceInfo}, userInput, userSelectedQuery, findSpaceInfo } } = props;\r\n    return(\r\n        <section>\r\n            <h2>Space information</h2>\r\n            <p>Search space information based on the search input. The result shows up a list of items based on user requets. The list includes title of the event, its photo and description.</p>\r\n\r\n            <form action=\"\">\r\n                <div className=\"spaceInfo\">\r\n                    <label htmlFor=\"text\" className=\"srOnly\">Input your search query</label>\r\n                    <input onChange={userSelectedQuery} type=\"text\" name=\"searchText\" id=\"text\" value={userInput.searchText} placeholder=\"e.g. Nebulae\"/>\r\n                    \r\n                    <button onClick={findSpaceInfo}>SEARCH</button>\r\n\r\n                    {\r\n                    (spaceInfo.hasOwnProperty('items') && !isLoading.searchText) ? <NavLink to=\"/spaceInfo\" className=\"resultsLink\">SEE RESULTS</NavLink>\r\n                    : isLoading.searchText ? <LoadingLogo /> : null\r\n                    }\r\n                </div>\r\n            </form>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default MainPageAddInfo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst GoBackButton = (props) => {\r\n    const { changePage } = props\r\n\r\n    return(\r\n        changePage ? \r\n        <div className=\"seeResLink\">\r\n            <NavLink to={`/`} className=\"goBackLink\" onClick={() => changePage('')} >GO BACK</NavLink>\r\n        </div>\r\n        :         \r\n        <div className=\"seeResLink\">\r\n            <NavLink to={`/`} className=\"goBackLink\">GO BACK</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GoBackButton;","import React from 'react';\r\nimport GoBackButton from '../../presentational/GoBackButton';\r\n\r\nconst ResultsDayPhoto = ( props ) => {\r\n    const { propsForDayPhoto: { title, url, copyright, date, explanation, media_type } } = props;\r\n\r\n        return (\r\n            <div className=\"dayPhotoRes\">\r\n                <h3>{title}</h3>\r\n                {\r\n                    props.propsForDayPhoto.hasOwnProperty(\"copyright\") ?\r\n                    <p>{media_type === \"image\" ? 'Photo of the day' : 'Video of the day'} <span>{date}</span> by {copyright}</p>\r\n                    :\r\n                    <p>{media_type === \"image\" ? 'Photo of the day' : 'Video of the day'} <span>{date}</span> by unknown author</p>\r\n                }\r\n                <p>{explanation}</p>\r\n                <div>\r\n                    {\r\n                        media_type === 'image' ? <img src={url} alt={title} /> :\r\n                            <iframe\r\n                                src={url}\r\n                                frameBorder='0'\r\n                                allow='autoplay; encrypted-media'\r\n                                allowFullScreen\r\n                                title='video'\r\n                                width='550px'\r\n                                height='325px'\r\n                            />\r\n                    }\r\n                </div>\r\n                <GoBackButton />\r\n            </div>\r\n        )\r\n};\r\n\r\nexport default ResultsDayPhoto;","import React from 'react';\r\nimport GoBackButton from '../../presentational/GoBackButton';\r\n\r\nconst ResultsRoverPhotos = ( props ) => {\r\n        const { roverPhotos: [ { earth_date: earthDate, rover: { landing_date: landingDate, launch_date: launchDate, name: roverName, status: roverStatus } } ], manifestData } = props;\r\n        return (\r\n            <div className=\"roverPhotosRes\">\r\n                <h3>Photos</h3>\r\n                <p>Rover name <span>{roverName}</span></p>\r\n                <p>Photos taken on <span>{earthDate}</span></p>\r\n                <p>Rover left Earth <span>{launchDate}</span></p>\r\n                <p>Rover landed on Mars <span>{landingDate}</span></p>\r\n                <p>Total photos taken by {roverName} <span>{manifestData[roverName.toLowerCase()].total_photos}</span></p>\r\n                <p>The last photos taken on <span>{manifestData[roverName.toLowerCase()].max_date}</span></p>\r\n                <p>Status <span>{roverStatus}</span></p>\r\n\r\n                <ul>\r\n                    {\r\n                        props.roverPhotos.map( (obj) => {\r\n                            return (\r\n                                <li key={obj.id}>\r\n                                    <img src={obj.img_src} alt={`taken by ${obj.rover.name} on ${obj.earth_date}`} />\r\n                                    <a href={obj.img_src} target='_blank' rel='noopener noreferrer'>Full image</a>\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n                <GoBackButton />\r\n            </div>\r\n        )\r\n};\r\n\r\nexport default ResultsRoverPhotos;","import React from 'react';\r\nimport GoBackButton from '../../presentational/GoBackButton';\r\nimport LazyLoad from 'react-lazyload';\r\nimport Loading from '../../presentational/Loading/LoadingLogo';\r\n\r\n// FUNCTIONS\r\nimport checkPrevNextPages from '../../../helpers/checkPrevNextPages/checkPrevNextPages';\r\n\r\nconst ResultsAddInfo = ( props ) => {\r\n        const { changePage } = props;\r\n        const checkingPages = checkPrevNextPages(props.propsForAddInfo.links);\r\n        console.log(checkingPages);\r\n        console.log(props);\r\n        console.log(window.innerHeight);\r\n        return (\r\n            <div>\r\n                <h3>Space Information</h3>\r\n\r\n                <ul className=\"spaceInfoRes\">\r\n                    {\r\n                        // props.propsForAddInfo.items.slice(0, 10).map((obj) => {\r\n                        props.propsForAddInfo.items.map((obj) => {\r\n                            return (\r\n                                <LazyLoad\r\n                                    key={obj.data[0].nasa_id}\r\n                                    height={100}\r\n                                    offset={[-100,100]}\r\n                                    placeholder={<Loading/>}\r\n                                    unmountIfInvisible={true}\r\n                                    once\r\n                                >\r\n                                    <li>\r\n                                        <h4>{obj.data[0].title}</h4>\r\n                                        {\r\n                                            obj.hasOwnProperty('links') ? <div className=\"imgParent\"><img src={obj.links[0].href} alt={`${obj.data[0].title}`} /></div> : null\r\n                                        }\r\n                                        <p>{obj.data[0].description}</p>\r\n                                    </li>\r\n                                </LazyLoad>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n                \r\n                {\r\n                    (checkingPages && checkingPages[0]) === 'prev' ? \r\n                        <div className='prevNextPages'>\r\n                            <button onClick={ () => changePage(checkingPages[1]) } aria-label='go to the previous page'><i className=\"fas fa-chevron-left\" aria-hidden='true'></i></button>\r\n                        </div>\r\n                    : (checkingPages && checkingPages[0]) === 'next' ? \r\n                        <div className='prevNextPages'>                    \r\n                            <button onClick={ () => changePage(checkingPages[1]) } aria-label='go to the next page'><i className=\"fas fa-chevron-right\" aria-hidden='true'></i></button>\r\n                        </div>\r\n                    : checkingPages ?\r\n                    <div className='prevNextPages'>\r\n                        <button onClick={ () => changePage(checkingPages[0]) } aria-label='go to the previous page'><i className=\"fas fa-chevron-left\" aria-hidden='true'></i></button>\r\n                        <button onClick={ () => changePage(checkingPages[1]) } aria-label='go to the next page'><i className=\"fas fa-chevron-right\" aria-hidden='true'></i></button>\r\n                    </div>\r\n                    : null\r\n                }\r\n                <GoBackButton  changePage={changePage} />\r\n\r\n                <div className=\"scrollBtn\">\r\n                    <button onClick={ () => window.scrollTo(0, document.body.scrollHeight)} >Scroll to bottom</button>\r\n                    <button onClick={ () => window.scrollTo(0, 0)} >Scroll to top</button>\r\n                </div>\r\n            </div>\r\n        )\r\n};\r\n\r\nexport default ResultsAddInfo;","export default function checkPrevNextPages(pages) {\r\n\r\n    // the function checks what pages are available to go to after the first API call(default: page 1)\r\n    if (!pages) {\r\n        return\r\n    }\r\n\r\n    if ( pages.length === 2 ) {\r\n        const prevPage = pages[0].href.split('&')[0].split('=')[1];\r\n        const nextPage = pages[1].href.split('&')[0].split('=')[1];\r\n        return [prevPage, nextPage]\r\n    } else if (pages.length === 1) {\r\n        if (pages[0].rel === 'prev') {\r\n            const prevPage = pages[0].href.split('&')[0].split('=')[1];\r\n            return ['prev', prevPage]\r\n        } else if (pages[0].rel === 'next') {\r\n            const nextPage = pages[0].href.split('&')[0].split('=')[1];\r\n            return ['next', nextPage]\r\n        }\r\n    }\r\n};","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport \"./results.scss\";\r\n\r\n// UI components\r\nimport ResultsDayPhoto from './ResultsDayPhoto'\r\nimport ResultsRoverPhotos from './ResultsRoverPhotos'\r\nimport ResultsAddInfo from './ResultsAddInfo'\r\n\r\nconst Results = ( props ) => {\r\n    const { results:{dayPhoto, roverPhotos, spaceInfo}, \r\n            manifestData, \r\n            currentPage, \r\n            changePage, \r\n            paths: [homepage, apodPath, roverPath, infoPath],\r\n        } = props;\r\n\r\n    // 3 result components: dayPhoto, roverPhotos, spaceInfo /////////////////////////////////////////////////////////////////\r\n    return(\r\n        <div>\r\n            <Route exact path={apodPath}>\r\n                <ResultsDayPhoto propsForDayPhoto={dayPhoto} />\r\n            </Route>\r\n\r\n            <Route exact path={roverPath}>\r\n                <ResultsRoverPhotos roverPhotos={roverPhotos} manifestData={manifestData} />\r\n            </Route>\r\n\r\n            <Route exact path={infoPath}>\r\n                <ResultsAddInfo propsForAddInfo={spaceInfo} currentPage={currentPage} changePage={changePage} />\r\n            </Route>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Results;","import React from 'react';\r\nimport './main.scss';\r\n\r\n// Components\r\nimport Error from '../../presentational/Error/Error';\r\nimport Header from '../../presentational/Header';\r\nimport MainPageApod from './MainPageApod';\r\nimport MainPageRoverPhotos from './MainPageRoverPhotos';\r\nimport MainPageAddInfo from './MainPageAddInfo';\r\nimport Results from '../Results/Results';\r\nimport { Redirect, Route, useLocation } from 'react-router-dom';\r\n\r\nconst MainPage = ( props ) => {\r\n    const { isThereError, \r\n            userInput: {date, roverName, searchText}, \r\n            results,\r\n            manifestData,\r\n            currentPage,\r\n            changePage,\r\n            paths\r\n        } = props;\r\n    \r\n    let location = useLocation();\r\n\r\n    return(\r\n        <div>\r\n            <Route exact path=\"/\">\r\n                <Header />\r\n\r\n                { isThereError ? <Error propsForError={props}/> : null }\r\n\r\n                {/* LOOKING FOR PHOTO OF THE DAY */}\r\n                <MainPageApod propsForApod={props}/>\r\n\r\n                {/* LOOKING FOR ROVER PHOTOS */}\r\n                <MainPageRoverPhotos propsForRovers={props}/>\r\n\r\n                {/* LOOKING FOR ADDITIONAL SPACE INFO */}\r\n                <MainPageAddInfo propsForAddInfo={props}/>\r\n            </Route>\r\n\r\n            {( (!date && !roverName && !searchText) && paths.includes(location.pathname) && location.pathname !== '/' ) ? <Redirect to=\"/400\" /> \r\n              :\r\n            <Results \r\n                results={results} \r\n                manifestData={manifestData} \r\n                currentPage={currentPage} \r\n                changePage={changePage}\r\n                paths={paths}\r\n            />\r\n            }\r\n            { !paths.includes(location.pathname) && <Redirect to=\"/404\" /> }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;","import React from 'react';\r\nimport './footer.scss';\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <footer>\r\n            <p>2020 Built by Illia N.</p>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\nimport \"./ErrorPage.scss\";\r\nimport GoBackButton from '../GoBackButton';\r\n\r\nconst ErrorPage = (errorMsg) => {\r\n    return (\r\n        <div className=\"errorPage\">\r\n            <h1>{errorMsg}</h1>\r\n            <GoBackButton />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorPage;","import React, { useState, useEffect, createContext, useContext } from 'react';\r\nimport axios from 'axios';\r\n\r\n// FUNCTIONS\r\nimport setTodayDate from '../../helpers/setTodayDate/setTodayDate';\r\n\r\nconst UserInput = createContext();\r\n\r\n// Using UserInput will allow us to grab UserInput's content in any file in the App\r\nexport const useLogic = () => {\r\n    return useContext(UserInput);\r\n};\r\n\r\n// AppContext functional\r\nexport default function AppContext({ children }){\r\n    const paths = [\"/\", \"/photooftheday\", \"/roverPhotos\", \"/spaceInfo\", \"/400\"];\r\n\r\n    const [userInput, userSelection] = useState({date: '', roverName: '', searchText: ''}); // USER INPUT STORAGE\r\n    const [manifestData, getManifestData] = useState({ spirit: '', opportunity: '', curiosity: '' }); // Manifest Results STORAGE(for rover photos)\r\n    const [results, getData] = useState({ dayPhoto: [], roverPhotos: [], spaceInfo: [] }); // RESULTS STORAGE\r\n\r\n    const [currentPage, changePage] = useState(''); // RESULTS PAGE STORAGE\r\n\r\n    //Error stuff\r\n    const [isThereError, showError] = useState(false); // ERROR T/F\r\n    const [errorMsg, setErrorMsg] = useState(''); // ERROR MESSAGE\r\n    \r\n    //Loading stuff\r\n    const [isLoading, setLoading] = useState({date: false, roverName: false, searchText: false}); // LOADING OR NOT\r\n\r\n    const userSelectedQuery = (e) => {\r\n        e.preventDefault();\r\n        userSelection({...userInput, [e.target.name]: e.target.value})\r\n    };\r\n\r\n    // APOD CALL\r\n    const findPhotoDay = (e) => {\r\n        e.preventDefault();\r\n\r\n        setLoading({...isLoading, date: true });\r\n        axios({\r\n            url: `https://api.nasa.gov/planetary/apod`,\r\n            method: 'GET',\r\n            params: {\r\n                api_key: `RQm9PKAWUOxPOwxSYLbTECB3ZtzrjLjlP4R9vIIm`,\r\n                date: userInput.date || setTodayDate(),\r\n            }\r\n        }).then( (res) => {\r\n            setLoading({...isLoading, date: false });\r\n            getData({...results, dayPhoto: res.data});\r\n\r\n            userSelection({...userInput, date: res.data.date})\r\n\r\n        }).catch( error => {\r\n            setLoading({...isLoading, date: false });\r\n            showError(true);\r\n            setErrorMsg(error.response.data.msg);\r\n        })\r\n    };\r\n\r\n    // ROVER CALL\r\n    // GETTING MAX DAYS SPENT ON MARS by selected rover to PASS that day value into the next API call to get photos\r\n    const findRoverPhotos = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!userInput.roverName) {\r\n            showError(true);\r\n            setErrorMsg('The input is empty.');\r\n            return\r\n        }\r\n\r\n        setLoading({ ...isLoading, roverName: true });\r\n        manifestCall().then( (res) => {\r\n            getManifestData({ ...manifestData, [userInput.roverName]: res.data.photo_manifest });\r\n        }).catch((er) => {\r\n            showError(true);\r\n            setErrorMsg(er.message);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (manifestData[userInput.roverName]) {\r\n            roverCall().then((res) => {\r\n                setLoading({ ...isLoading, roverName: false });\r\n                getData({ ...results, roverPhotos: res.data.photos });\r\n            }).catch((error) => {\r\n                setLoading({ ...isLoading, roverName: false });\r\n                showError(true);\r\n                setErrorMsg(error.response.data.errors);\r\n            })\r\n        }\r\n    }, [manifestData[userInput.roverName]]);\r\n\r\n\r\n    const manifestCall = () => {\r\n        return axios({\r\n            url: `https://api.nasa.gov/mars-photos/api/v1/manifests/${userInput.roverName}/`,\r\n            method: 'GET',\r\n            params: {\r\n                api_key: `RQm9PKAWUOxPOwxSYLbTECB3ZtzrjLjlP4R9vIIm`,\r\n            }\r\n        })\r\n    };\r\n\r\n    const roverCall = () => {\r\n        return axios({\r\n            url: `https://api.nasa.gov/mars-photos/api/v1/rovers/${userInput.roverName}/photos`, // need to be dynamic\r\n            method: 'GET',\r\n            params: {\r\n                api_key: `RQm9PKAWUOxPOwxSYLbTECB3ZtzrjLjlP4R9vIIm`,\r\n                sol: Math.floor(Math.random() * (manifestData[userInput.roverName].max_sol) + 1), // getting a random day out of all days spent by the selected rover on Mars\r\n                //earth_date: `2020-01-16`, // more practical would be to use sol instead of earth_date\r\n            }\r\n        })\r\n    };\r\n\r\n    // ADDITIONAL INFO CALL\r\n    const findSpaceInfo = (e) => {\r\n        e.preventDefault();\r\n\r\n        // checking if input is empty (no point in making an API call if the input in empty)\r\n        if (!userInput.searchText) {\r\n            showError(true);\r\n            setErrorMsg('The input is empty.');\r\n            return\r\n        } else {\r\n            setLoading({ ...isLoading, searchText: true });\r\n            findSpaceInfoApiCall();\r\n        };\r\n    };\r\n\r\n    const findSpaceInfoApiCall = () => {\r\n        axios({\r\n            url: `https://images-api.nasa.gov/search`,\r\n            method: 'GET',\r\n            params: {\r\n                q: userInput.searchText,\r\n                page: currentPage || 1,\r\n            }\r\n        })\r\n        .then((res) => {\r\n            const space = res.data.collection;\r\n            // showing error if there's no results based on the user input\r\n            if (!space.items.length) {\r\n                setLoading({ ...isLoading, searchText: false });\r\n                showError(true);\r\n                setErrorMsg('No results found based on your input.');\r\n            } else {\r\n                setLoading({ ...isLoading, searchText: false });\r\n                getData({ ...results, spaceInfo: space });\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            setLoading({ ...isLoading, searchText: false });\r\n            showError(true);\r\n            setErrorMsg(error.response.data.reason);\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (currentPage) {\r\n            findSpaceInfoApiCall();\r\n            window.scrollTo(0, 0);\r\n        };\r\n    }, [currentPage]);\r\n\r\n    return(\r\n        <UserInput.Provider value={{\r\n            userSelectedQuery: userSelectedQuery,\r\n\r\n            paths: paths,\r\n\r\n            userInput: userInput,\r\n            userSelection: userSelection,\r\n            results: results,\r\n            getData: getData,\r\n            manifestData:manifestData,\r\n            getManifestData:getManifestData,\r\n            currentPage:currentPage,\r\n            changePage:changePage,\r\n\r\n            isThereError: isThereError,\r\n            showError: showError,\r\n            errorMsg: errorMsg,\r\n            setErrorMsg: setErrorMsg,\r\n\r\n            isLoading: isLoading,\r\n            setLoading: setLoading,\r\n\r\n            findPhotoDay: findPhotoDay,\r\n            findRoverPhotos: findRoverPhotos,\r\n            findSpaceInfo: findSpaceInfo,\r\n\r\n        }}>\r\n            { children }\r\n        </UserInput.Provider>\r\n    )\r\n};","import React from 'react';\r\nimport \"./styles/general.scss\";\r\nimport BgVideo from './components/presentational/Background/BgVideo';\r\nimport MainPage from './components/views/MainPage/MainPage';\r\nimport Footer from './components/presentational/Footer/Footer';\r\nimport ErrorPage from './components/presentational/404/ErrorPage';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\n// grabbing every needed component' logic\r\nimport { useLogic } from './components/smart/AppContext';\r\n\r\nfunction App() {  \r\n  // using imported functions from other smart components\r\n  const { paths, userInput, manifestData, results, currentPage, changePage, userSelectedQuery, \r\n          isThereError, showError, errorMsg,\r\n          isLoading,\r\n          findPhotoDay,\r\n          findRoverPhotos,\r\n          findSpaceInfo } = useLogic();\r\n\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <BgVideo />\r\n          <div className=\"App wrapper\">\r\n            <Route exact path=\"/400\" component={() => ErrorPage('Something went wrong')} />\r\n            <Route exact path=\"/404\" component={() => ErrorPage('The page not found')} />\r\n            <Route path=\"/\">\r\n                <MainPage\r\n                  isThereError={isThereError}\r\n                  showError={showError}\r\n                  errorMsg={errorMsg}\r\n\r\n                  isLoading={isLoading}\r\n                  userInput={userInput}\r\n                  userSelectedQuery={userSelectedQuery}\r\n                  findPhotoDay={findPhotoDay}\r\n                  results={results}\r\n\r\n                  findRoverPhotos={findRoverPhotos}\r\n                  findSpaceInfo={findSpaceInfo}\r\n\r\n                  manifestData={manifestData}\r\n                  changePage={changePage}\r\n                  currentPage={currentPage}\r\n\r\n                  paths={paths}\r\n                  />\r\n            </Route>\r\n          </div>\r\n        < Footer />\r\n      </Router>\r\n  );\r\n};\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport AppContext from './components/smart/AppContext';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppContext>\r\n      <App />\r\n    </AppContext>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}